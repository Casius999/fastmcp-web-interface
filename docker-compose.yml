version: '3.8'

services:
  redis:
    image: redis:alpine
    container_name: fastmcp-redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - fastmcp-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  fastmcp-server:
    build:
      context: .
      dockerfile: Dockerfile
    image: fastmcp-web-interface-server
    container_name: fastmcp-server
    command: python server.py
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - fastmcp-network
    volumes:
      - ./logs:/app/logs
      - ./.env:/app/.env
    environment:
      - PYTHONUNBUFFERED=1
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; s = socket.socket(socket.AF_INET, socket.SOCK_STREAM); s.connect((\"localhost\", 50051)) or exit(1)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  fastmcp-web:
    build:
      context: .
      dockerfile: Dockerfile
    image: fastmcp-web-interface-web
    container_name: fastmcp-web
    command: uvicorn app:app --host 0.0.0.0 --port 8000 --workers 4
    ports:
      - "${API_PORT:-8000}:8000"
      - "${PROMETHEUS_PORT:-8001}:8001"
    restart: unless-stopped
    depends_on:
      - fastmcp-server
      - redis
    networks:
      - fastmcp-network
    volumes:
      - ./logs:/app/logs
      - ./.env:/app/.env
      - ./static:/app/static
    environment:
      - PYTHONUNBUFFERED=1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  fastmcp-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
  logs:
    driver: local
